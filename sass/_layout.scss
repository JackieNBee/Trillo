.container {
    // if there's enouth space, occupy 120rem
    // if there's not, simply occupy 100% of the available viewport width
    max-width: 120rem;
    // to horizontally center
    margin: 8rem auto;
    background-color: var(--color-grey-light-1);
    box-shadow: var(--shadow-dark);

    min-height: 50rem; // for testing porpouses

    @media only screen and (max-width: $bp-largest) {
        margin: 0; // remove the background
        // to fix background coming back on $bp-large breakpoint
        max-width: 100%;
        width: 100%;
    }
}

// Flexbox container
.header {
    font-size: 1.4rem;
    height: 7rem;
    background-color: #fff;
    border-bottom: var(--line);

    display: flex;
    // align elements on main axis
    justify-content: space-between;
    // alight elements on cross axis;
    align-items: center;
}

// Flexbox container
.content {
    display: flex;

    @media only screen and (max-width: $bp-medium) {
        // put the sidebar on top of the hotel-view
        flex-direction: column;
    }
}

// Flexbox item
// Flexbox container
.sidebar {
    background-color: var(--color-grey-dark-1);

    // to define a width for a flexbox item we should always use flex-basis
    // good practice to use shorten property
    // flex-grow | flex-shrink | flex-basis
    flex: 0 0 18%; // since we're using a percentage it will automatically shrink so no need of flex-shrink

    display: flex;
    flex-direction: column; // change the main direction from left-right to top-bottom
    justify-content: space-between; // now we can use space between to push the legal text to the bottom
}

// Flexbox item
.hotel-view {
    background-color: #fff;
    // background-color: orangered; // for testing porpouses
    // height: 80rem; // for testing porpouses

    // grow as much as the flexbox item can, occupy all the available space it has
    // in this case is 82% --> 100% - 18%
    flex: 1;
}

// Flexbox container
.detail {
    font-size: 1.4rem;
    display: flex;
    padding: 4.5rem;
    background-color: var(--color-grey-light-1);
    border-bottom: var(--line);

    @media only screen and (max-width: $bp-medium) {
        // decrease padding
        padding: 3rem;
    }
}

// Flexbox item
.description {
    background-color: #fff;
    box-shadow: var(--shadow-light);
    padding: 3rem;
    // set 60% of available width
    // when we use % for flex-basis we usally set flex-grow and flex-shrink to 0
    flex: 0 0 60%;
    margin-right: 4.5rem; // put some space between description and reviews - same value as padding of .detail

    @media only screen and (max-width: $bp-medium) {
        // decrease padding
        padding: 2rem;
        // decrease right margin
        margin-right: 3rem;
    }
}

// Flexbox item
// Flexbox container
.user-reviews {
    // background-color: yellowgreen; // for testing porpouses

    // occupy the remaining space
    flex: 1;

    // we're doing this basically just to horizontally center the "Show all" button
    display: flex;
    flex-direction: column;
    align-items: center;
}