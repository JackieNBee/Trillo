////////////////////////////////////////////////
// LOGO
// Flexbox item
.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

////////////////////////////////////////////////
// SEARCH
// Flexbox item
// Flexbox container
.search {
    // background-color: orangered; // for testing porpouses
    flex: 0 0 40%;

    display: flex;
    align-items: center; // vertically align
    justify-content: center; // horizontally align

    &__input {
        // input elements by default don't inherit font properties
        // inherit the font size of header
        font-family: inherit;
        font-size: inherit;
        color: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        // doesn't matter the value just put a high number even in px
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        // to move button on top of the input
        margin-right: -3.25rem;

        // when focused, don't show the outline and expand to occupy 100% of the parent's width
        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    // when the input is focused, change the adjacent button's background to the same color
    &__input:focus+&__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }

    &__icon {
        // it's easier to style a SVG compared to an icon font
        height: 2rem;
        width: 2rem;
        // to change SVG's color
        fill: var(--color-grey-dark-3);
    }
}

////////////////////////////////////////////////
// USER NAVIGATION
// Flexbox item
// Flexbox container
.user-nav {
    // background-color: greenyellow; // for testing porpouses
    // overrides the align-items: center in header 
    // because we want the user-nav to occupy all the available height
    align-self: stretch;

    display: flex;
    align-items: center; // center child elements vertically

    // select all the direct children of .user-nav
    // Flexbox container
    &>* {
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;

        display: flex;
        align-items: center;
    }

    &>*:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    // Flexbox container
    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;

        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        // Flexbox works not only with child elements but with text as well
        // to center the notification's text
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        // to make it round
        border-radius: 50%;
        // to put some space between user's photo and name
        margin-right: 1rem;
    }

}